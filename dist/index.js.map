{"version":3,"file":"index.js","sourceRoot":"","sources":["../index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    ApiQueryScope, ApiEdgeError, OneToOneRelation, OneToManyRelation, ApiEdgeQueryResponse, Api, ApiEdgeQueryType,\n    ApiEdgeActionTriggerKind, ApiEdgeActionTrigger, QueryEdgeQueryStep\n} from \"api-core\";\nimport {MongooseModelFactory} from \"api-model-mongoose\";\nimport {EllipseApiRouter} from \"api-provider-ellipse\";\nimport * as mongoose from \"mongoose\";\n\nconst Ellipse = require('ellipse'),\n      ACL = require('acl'),\n      app = new Ellipse;\n\nlet acl = new ACL(new ACL.memoryBackend());\nacl.allow(\"admin\", \"student\", \"*\");\nacl.allow(\"admin\", \"school\", \"Get\");\nacl.addUserRoles(\"5812832682285d4a08d67eb9\", \"admin\");\n\nmongoose.Promise = global.Promise;\nmongoose.connect(\"mongodb://localhost/api-demo\");\n\nfunction mapStudentEntry(user: any, student: any) {\n    let temp: any = {\n        id: student._id.toHexString(),\n        name: [student.firstName, student.lastName].join(' '),\n        school: student.schoolId\n    };\n\n    if(student.classId)\n        temp['class'] = student.classId;\n\n    if(user.id === temp.id) {\n        temp.email = student.email;\n        temp.phone = student.phone\n    }\n\n    return temp\n}\n\nfunction mapStudent(scope: ApiQueryScope) {\n    return new Promise(resolve => {\n        if(scope.response) {\n            const data = scope.response.data;\n            const mapper = mapStudentEntry.bind(null, scope.identity);\n            scope.response.data = Array.isArray(data) ? data.map(mapper) : mapper(data)\n        }\n\n        resolve(scope)\n    })\n}\n\nfunction ensureAuthenticated(scope: ApiQueryScope) {\n    return new Promise((resolve, reject) => {\n        if(scope.identity) resolve(scope);\n        else reject(new ApiEdgeError(403, \"Forbidden\"))\n    })\n}\n\nfunction ensureACL(scope: ApiQueryScope) {\n    return new Promise((resolve, reject) => {\n        let querySteps = scope.query.steps\n            .filter((step: any) => step instanceof QueryEdgeQueryStep);\n\n        function next() {\n            const step: QueryEdgeQueryStep = querySteps.pop() as QueryEdgeQueryStep;\n            acl.isAllowed(scope.identity.id, step.query.edge.name, ApiEdgeQueryType[step.query.type])\n                .then((allowed: boolean) => {\n                    if (allowed) {\n                        if (querySteps.length) {\n                            next()\n                        }\n                        else {\n                            resolve(scope)\n                        }\n                    }\n                    else {\n                        reject(new ApiEdgeError(403, `Forbidden (${ApiEdgeQueryType[step.query.type]} ${step.query.edge.name})`))\n                    }\n                })\n                .catch(reject);\n        }\n\n        if(querySteps.length) {\n            next()\n        }\n        else {\n            resolve(scope)\n        }\n    })\n}\n\nconst studentEdge =\n          MongooseModelFactory.createModel(\"student\", \"students\", {\n              id: String,\n              firstName: String,\n              lastName: String,\n              email: String,\n              phone: String,\n              schoolId: {\n                  ref: 'school',\n                  type: mongoose.Schema.Types.ObjectId\n              },\n              classId: mongoose.Schema.Types.ObjectId\n          }).action(\"map\", mapStudent,\n              ApiEdgeQueryType.Any,\n              ApiEdgeActionTriggerKind.AfterEvent,\n              ApiEdgeActionTrigger.OutputQuery),\n      classEdge =\n          MongooseModelFactory.createModel(\"class\", \"classes\", {\n              id: String,\n              name: String,\n              semester: String,\n              room: String,\n              schoolId: mongoose.Schema.Types.ObjectId\n          }),\n      courseEdge =\n          MongooseModelFactory.createModel(\"course\", \"courses\", {\n              id: String,\n              name: String,\n              classId: mongoose.Schema.Types.ObjectId,\n              courseTypeId: mongoose.Schema.Types.ObjectId\n          }),\n      courseTypeEdge =\n          MongooseModelFactory.createModel(\"courseType\", \"courseTypes\", {\n              id: String,\n              name: String\n          }),\n      schoolEdge =\n          MongooseModelFactory.createModel(\"school\", \"schools\", {\n              id: String,\n              name: String,\n              address: String,\n              phone: String\n          });\n\nconst api10\n    = new Api('1.0')\n        .edge(studentEdge);\n\nconst api11\n    = new Api('1.1')\n    .edge(studentEdge)\n    .edge(classEdge)\n    .edge(courseEdge)\n    .edge(courseTypeEdge)\n    .edge(schoolEdge)\n    .relation(new OneToOneRelation(courseEdge, courseTypeEdge))\n    .relation(new OneToManyRelation(courseTypeEdge, courseEdge))\n    .relation(new OneToManyRelation(studentEdge, courseEdge))\n    .relation(new OneToOneRelation(studentEdge, classEdge))\n    .relation(new OneToOneRelation(studentEdge, schoolEdge))\n    .relation(new OneToOneRelation(classEdge, schoolEdge))\n    .relation(new OneToOneRelation(courseEdge, classEdge))\n    .relation(new OneToManyRelation(classEdge, studentEdge))\n    .relation(new OneToManyRelation(classEdge, courseEdge))\n    .relation(new OneToManyRelation(schoolEdge, studentEdge))\n    .relation(new OneToManyRelation(schoolEdge, classEdge))\n    .action(\"authenticate\", ensureAuthenticated)\n    .action(\"acl\", ensureACL);\n\n\napp.use(require('body-parser').json());\napp.get('/favicon.ico', (req: any, res: any) => res.send(''));\n\napp.use(function(req: any, res: any, next: any) {\n    req.user = { id: \"5812832682285d4a08d67eb9\" };\n    next()\n});\n\nconst router = new EllipseApiRouter(api11, api10);\nrouter.apply(app);\n\napp.listen(8080);\n\n//TEST: http://localhost:8080/api/v1.0/schools/s1/students/s2/class/courses?fields=id,name\n/*\n [\n     {\n         \"id\": \"c1\",\n         \"name\": \"Maths A1\"\n     },\n     {\n         \"id\": \"c6\",\n         \"name\": \"Science A1\"\n     }\n ]\n */"]}