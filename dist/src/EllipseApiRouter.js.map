{"version":3,"file":"EllipseApiRouter.js","sourceRoot":"","sources":["../../src/EllipseApiRouter.ts"],"names":[],"mappings":"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","sourcesContent":["import {ApiEdgeDefinition, ApiEdgeError, ApiEdgeQueryResponse, Api, ApiRequestType} from \"api-core\";\nconst Router = require('ellipse').Router;\n\nexport class EllipseApiRouter extends Router {\n\n    defaultApi: Api;\n    apis: Api[];\n\n    private apiVersions: string[];\n\n    constructor(...apis: Api[]) {\n        super();\n\n        this.apis = apis;\n        this.defaultApi = apis[0];\n\n        this.apiVersions = apis.map(api => api.version);\n    }\n\n    apply = (app) => {\n        let router = this;\n\n        app.all('/api/v:version/*', function(req, res, next) {\n            let index = router.apiVersions.indexOf(req.params.version);\n            if(index == -1) {\n                this.error = new ApiEdgeError(400, \"Unsupported API version\");\n                next()\n            }\n            else {\n                this.api = router.apis[index];\n                req.path = req.path.replace(`/api/v${this.api.version}/`, '');\n                next()\n            }\n        });\n\n        app.all('/api/*', function (req, res, next) {\n            if(!this.api) this.api = router.defaultApi;\n            req.path = req.path.replace('/api/', '');\n            next()\n        });\n\n        app.use(function(req, res, next) {\n            if(this.error || !this.api) next();\n            else {\n                try {\n                    let request = this.api.parseRequest(req.path.split('/'));\n\n                    if (req.query.fields)\n                        request.context.fields = req.query.fields.split(',');\n\n                    if (req.query.sort)\n                        req.query.sort.split(',')\n                            .forEach((s: string) =>\n                                request.context.sort(s.substring(s[0] == '-' ? 1 : 0), s[0] !== '-'));\n\n                    let limit = +req.query.limit,\n                        skip = +req.query.skip,\n                        page = +req.query.page;\n\n                    if(limit === limit ||\n                        skip === skip ||\n                        page === page) {\n                        limit = limit || 10;\n                        if(page) skip = (page-1) * limit;\n                        else skip = skip || 0;\n                        request.context.paginate(skip, limit);\n                    }\n\n                    if (req.body)\n                        request.body = req.body;\n\n                    switch(req.method) {\n                        case \"GET\":\n                            request.type = ApiRequestType.Read;\n                            break;\n                        case \"POST\":\n                            request.type = ApiRequestType.Create;\n                            break;\n                        case \"PUT\":\n                            request.type = ApiRequestType.Update;\n                            break;\n                        case \"PATCH\":\n                            request.type = ApiRequestType.Patch;\n                            break;\n                        case \"DELETE\":\n                            request.type = ApiRequestType.Delete;\n                            break;\n                    }\n\n                    console.log(request.path);\n\n                    let query = this.api.buildQuery(request);\n                    console.log(query.steps);\n                    query.execute()\n                        .then((resp: ApiEdgeQueryResponse) => {\n                            this.json = resp.data;\n\n                            if(resp.metadata) {\n                                if(resp.metadata.pagination) {\n                                    let total = resp.metadata.pagination.total||0;\n                                    res.setHeader('X-Total-Count', page ? Math.ceil(total / limit) : total);\n                                }\n                            }\n\n                            this.send()\n                        })\n                        .catch((e: any) => {\n                            this.error = e;\n                            next()\n                        })\n                }\n                catch (e) {\n                    this.error = e;\n                    next()\n                }\n            }\n        });\n\n        app.use(function () {\n            let e = this.error;\n            if(e instanceof ApiEdgeError) {\n                this.status = e.status;\n                this.send(e.message);\n            }\n            else {\n                if(e) console.log(e);\n                this.status = 500;\n                this.send(\"Internal Server Error\");\n            }\n        });\n    };\n\n}\n"]}